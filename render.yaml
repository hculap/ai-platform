databases:
  - name: ai-platform-db
    plan: free
    region: oregon

services:
  # Flask Backend with integrated Frontend
  - type: web
    name: ai-platform-fullstack
    runtime: python3
    buildCommand: |
      # Install Node.js and build frontend
      curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
      sudo apt-get install -y nodejs
      cd frontend && CI=false npm ci && npm run build
      cd backend && pip install -r requirements.txt
    startCommand: cd backend && gunicorn wsgi:application
    plan: free # Change to 'starter' or higher for production
    region: oregon
    rootDir: .
    envVars:
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        generateValue: true # Render will generate a secure key
      - key: JWT_SECRET_KEY
        generateValue: true # Render will generate a secure key
      - key: DATABASE_URL
        fromDatabase:
          name: ai-platform-db
          property: connectionString
      # These need to be set manually in Render dashboard
      - key: OPENAI_API_KEY
        sync: false # Must be set in dashboard
      - key: OPENAI_BASE_URL
        value: https://api.openai.com/v1
      - key: OPENAI_DEFAULT_MODEL
        value: gpt-4o
      - key: REACT_APP_API_URL
        value: /api

# Note: This render.yaml provides a template but manual setup through
# the Render dashboard is recommended for better control over sensitive
# environment variables like OPENAI_API_KEY