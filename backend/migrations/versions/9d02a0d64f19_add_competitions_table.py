"""Add competitions table

Revision ID: 9d02a0d64f19
Revises: 49e76ac1e851
Create Date: 2025-08-28 15:20:38.731198

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9d02a0d64f19'
down_revision = '49e76ac1e851'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('analysis_requests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_analysis_requests_openai_response_id'))

    op.drop_table('analysis_requests')

    # Create competitions table
    op.create_table('competitions',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('business_profile_id', sa.String(length=36), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('url', sa.String(length=500), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('usp', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['business_profile_id'], ['business_profiles.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop competitions table
    op.drop_table('competitions')

    op.create_table('analysis_requests',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('openai_response_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('website_url', sa.VARCHAR(length=500), nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('analysis_result', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('analysis_requests', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_analysis_requests_openai_response_id'), ['openai_response_id'], unique=1)

    # ### end Alembic commands ###
