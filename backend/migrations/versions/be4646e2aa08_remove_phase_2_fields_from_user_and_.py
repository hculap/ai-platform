"""Remove Phase 2 fields from User and BusinessProfile models

Revision ID: be4646e2aa08
Revises: d9077a5f7b6f
Create Date: 2025-09-16 20:06:13.008819

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'be4646e2aa08'
down_revision = 'd9077a5f7b6f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    from alembic import context
    from sqlalchemy import inspect

    # Get the database inspector
    conn = context.get_bind()
    inspector = inspect(conn)
    existing_tables = inspector.get_table_names()

    # Drop columns from business_profiles if they exist
    if 'business_profiles' in existing_tables:
        business_profiles_columns = [col['name'] for col in inspector.get_columns('business_profiles')]
        with op.batch_alter_table('business_profiles', schema=None) as batch_op:
            if 'country' in business_profiles_columns:
                batch_op.drop_column('country')
            if 'business_address' in business_profiles_columns:
                batch_op.drop_column('business_address')
            if 'postal_code' in business_profiles_columns:
                batch_op.drop_column('postal_code')
            if 'city' in business_profiles_columns:
                batch_op.drop_column('city')
            if 'contact_email' in business_profiles_columns:
                batch_op.drop_column('contact_email')
            if 'state' in business_profiles_columns:
                batch_op.drop_column('state')
            if 'phone_number' in business_profiles_columns:
                batch_op.drop_column('phone_number')
            if 'calendar_link' in business_profiles_columns:
                batch_op.drop_column('calendar_link')

    # Drop columns from users if they exist
    if 'users' in existing_tables:
        users_columns = [col['name'] for col in inspector.get_columns('users')]
        with op.batch_alter_table('users', schema=None) as batch_op:
            if 'first_name' in users_columns:
                batch_op.drop_column('first_name')
            if 'last_name' in users_columns:
                batch_op.drop_column('last_name')
            if 'preferred_language' in users_columns:
                batch_op.drop_column('preferred_language')
            if 'phone_number' in users_columns:
                batch_op.drop_column('phone_number')
            if 'timezone' in users_columns:
                batch_op.drop_column('timezone')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timezone', sa.VARCHAR(length=50), nullable=True))
        batch_op.add_column(sa.Column('phone_number', sa.VARCHAR(length=20), nullable=True))
        batch_op.add_column(sa.Column('preferred_language', sa.VARCHAR(length=10), nullable=True))
        batch_op.add_column(sa.Column('last_name', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('first_name', sa.VARCHAR(length=100), nullable=True))

    with op.batch_alter_table('business_profiles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('calendar_link', sa.VARCHAR(length=500), nullable=True))
        batch_op.add_column(sa.Column('phone_number', sa.VARCHAR(length=20), nullable=True))
        batch_op.add_column(sa.Column('state', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('contact_email', sa.VARCHAR(length=255), nullable=True))
        batch_op.add_column(sa.Column('city', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('postal_code', sa.VARCHAR(length=20), nullable=True))
        batch_op.add_column(sa.Column('business_address', sa.VARCHAR(length=255), nullable=True))
        batch_op.add_column(sa.Column('country', sa.VARCHAR(length=100), nullable=True))

    # ### end Alembic commands ###
