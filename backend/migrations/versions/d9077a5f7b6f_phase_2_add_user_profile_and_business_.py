"""Phase 2: Add user profile and business contact fields

Revision ID: d9077a5f7b6f
Revises: 2ad14ff96dd3
Create Date: 2025-09-16 19:37:23.398498

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd9077a5f7b6f'
down_revision = '2ad14ff96dd3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    from alembic import context
    from sqlalchemy import inspect

    # Get the database inspector
    conn = context.get_bind()
    inspector = inspect(conn)
    existing_tables = inspector.get_table_names()

    # Only create prompt_templates table if it doesn't exist
    if 'prompt_templates' not in existing_tables:
        op.create_table('prompt_templates',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('dependencies', sa.JSON(), nullable=True),
    sa.Column('language', sa.String(length=5), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )

    # Only create credit_transactions table if it doesn't exist
    if 'credit_transactions' not in existing_tables:
        op.create_table('credit_transactions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('balance_after', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('tool_slug', sa.String(length=100), nullable=True),
    sa.Column('interaction_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['interaction_id'], ['interactions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Only create user_credits table if it doesn't exist
    if 'user_credits' not in existing_tables:
        op.create_table('user_credits',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('balance', sa.Integer(), nullable=False),
    sa.Column('monthly_quota', sa.Integer(), nullable=False),
    sa.Column('renewal_date', sa.DateTime(), nullable=True),
    sa.Column('subscription_status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )

    # Only create campaigns table if it doesn't exist
    if 'campaigns' not in existing_tables:
        op.create_table('campaigns',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_profile_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('goal', sa.String(length=100), nullable=False),
    sa.Column('budget', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.Column('selected_products', sa.JSON(), nullable=True),
    sa.Column('strategy_summary', sa.Text(), nullable=True),
    sa.Column('timeline', sa.Text(), nullable=True),
    sa.Column('target_audience', sa.Text(), nullable=True),
    sa.Column('sales_funnel_steps', sa.Text(), nullable=True),
    sa.Column('channels', sa.JSON(), nullable=True),
    sa.Column('channels_rationale', sa.JSON(), nullable=True),
    sa.Column('recommended_budget', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('risks_recommendations', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_profile_id'], ['business_profiles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Only create offers table if it doesn't exist
    if 'offers' not in existing_tables:
        op.create_table('offers',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_profile_id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_profile_id'], ['business_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Only create user_styles table if it doesn't exist
    if 'user_styles' not in existing_tables:
        op.create_table('user_styles',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('business_profile_id', sa.String(length=36), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('style_name', sa.String(length=255), nullable=True),
    sa.Column('sample_texts', sa.Text(), nullable=True),
    sa.Column('style_card', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_profile_id'], ['business_profiles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Only create ads table if it doesn't exist
    if 'ads' not in existing_tables:
        op.create_table('ads',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_profile_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('offer_id', sa.String(length=36), nullable=True),
    sa.Column('campaign_id', sa.String(length=36), nullable=True),
    sa.Column('platform', sa.String(length=50), nullable=False),
    sa.Column('format', sa.String(length=20), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('headline', sa.String(length=500), nullable=True),
    sa.Column('primary_text', sa.Text(), nullable=True),
    sa.Column('visual_brief', sa.Text(), nullable=True),
    sa.Column('overlay_text', sa.Text(), nullable=True),
    sa.Column('script_text', sa.Text(), nullable=True),
    sa.Column('cta', sa.String(length=100), nullable=True),
    sa.Column('asset_url', sa.String(length=500), nullable=True),
    sa.Column('landing_url', sa.String(length=500), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_profile_id'], ['business_profiles.id'], ),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Only create scripts table if it doesn't exist
    if 'scripts' not in existing_tables:
        op.create_table('scripts',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('business_profile_id', sa.String(length=36), nullable=False),
    sa.Column('style_id', sa.String(length=36), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('script_type', sa.String(length=50), nullable=False),
    sa.Column('offer_id', sa.String(length=36), nullable=True),
    sa.Column('campaign_id', sa.String(length=36), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_profile_id'], ['business_profiles.id'], ),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], ),
    sa.ForeignKeyConstraint(['style_id'], ['user_styles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Add columns to business_profiles if they don't exist
    if 'business_profiles' in existing_tables:
        business_profiles_columns = [col['name'] for col in inspector.get_columns('business_profiles')]
        with op.batch_alter_table('business_profiles', schema=None) as batch_op:
            if 'phone_number' not in business_profiles_columns:
                batch_op.add_column(sa.Column('phone_number', sa.String(length=20), nullable=True))
            if 'business_address' not in business_profiles_columns:
                batch_op.add_column(sa.Column('business_address', sa.String(length=255), nullable=True))
            if 'city' not in business_profiles_columns:
                batch_op.add_column(sa.Column('city', sa.String(length=100), nullable=True))
            if 'state' not in business_profiles_columns:
                batch_op.add_column(sa.Column('state', sa.String(length=100), nullable=True))
            if 'country' not in business_profiles_columns:
                batch_op.add_column(sa.Column('country', sa.String(length=100), nullable=True))
            if 'postal_code' not in business_profiles_columns:
                batch_op.add_column(sa.Column('postal_code', sa.String(length=20), nullable=True))
            if 'calendar_link' not in business_profiles_columns:
                batch_op.add_column(sa.Column('calendar_link', sa.String(length=500), nullable=True))
            if 'contact_email' not in business_profiles_columns:
                batch_op.add_column(sa.Column('contact_email', sa.String(length=255), nullable=True))

    # Add columns to users if they don't exist
    if 'users' in existing_tables:
        users_columns = [col['name'] for col in inspector.get_columns('users')]
        with op.batch_alter_table('users', schema=None) as batch_op:
            if 'first_name' not in users_columns:
                batch_op.add_column(sa.Column('first_name', sa.String(length=100), nullable=True))
            if 'last_name' not in users_columns:
                batch_op.add_column(sa.Column('last_name', sa.String(length=100), nullable=True))
            if 'phone_number' not in users_columns:
                batch_op.add_column(sa.Column('phone_number', sa.String(length=20), nullable=True))
            if 'timezone' not in users_columns:
                batch_op.add_column(sa.Column('timezone', sa.String(length=50), nullable=True))
            if 'preferred_language' not in users_columns:
                batch_op.add_column(sa.Column('preferred_language', sa.String(length=10), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('preferred_language')
        batch_op.drop_column('timezone')
        batch_op.drop_column('phone_number')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')

    with op.batch_alter_table('business_profiles', schema=None) as batch_op:
        batch_op.drop_column('contact_email')
        batch_op.drop_column('calendar_link')
        batch_op.drop_column('postal_code')
        batch_op.drop_column('country')
        batch_op.drop_column('state')
        batch_op.drop_column('city')
        batch_op.drop_column('business_address')
        batch_op.drop_column('phone_number')

    op.drop_table('scripts')
    op.drop_table('ads')
    op.drop_table('user_styles')
    op.drop_table('offers')
    op.drop_table('campaigns')
    op.drop_table('user_credits')
    op.drop_table('credit_transactions')
    op.drop_table('prompt_templates')
    # ### end Alembic commands ###
